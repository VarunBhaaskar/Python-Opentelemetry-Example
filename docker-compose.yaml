version: "2"
services:

  # python web server application
  python-server:
    image: varun1999/pythontelemetryexample:v1.0
    restart: always
    env_file:
    - compose.env
    ports:
      - "13000:80"
    volumes:
      - ./logs:/code/logs

  # Jaeger
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  zipkin-all-in-one:
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.75.0
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4318:4318"   # otlp http reciever
      - "4317:4317"   # otlp grpc reciever
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one
      - zipkin-all-in-one
      - python-server

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  # loki:
  #   image: grafana/loki:2.8.0
  #   ports:
  #     - "3100:3100"
  #   command: -config.file=/etc/loki/local-config.yaml


  # grafana:
  #     environment:
  #       - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
  #       - GF_AUTH_ANONYMOUS_ENABLED=true
  #       - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #     entrypoint:
  #       - sh
  #       - -euc
  #       - |
  #         mkdir -p /etc/grafana/provisioning/datasources
  #         cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
  #         apiVersion: 1
  #         datasources:
  #         - name: Loki
  #           type: loki
  #           access: proxy 
  #           orgId: 1
  #           url: http://0.0.0.0:3100
  #           basicAuth: false
  #           isDefault: true
  #           version: 1
  #           editable: false
  #         EOF
  #         /run.sh
  #     image: grafana/grafana:latest
  #     ports:
  #       - "3000:3000"

